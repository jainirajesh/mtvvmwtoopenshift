- name: Read CSV and create migration plans
  hosts: localhost
  gather_facts: false
  vars:
    source_provider_name: "vmware"
    destination_provider_name: "host"
    mtv_namespace: "openshift-mtv"
    network_map_name: "test-networkmap"
    storage_map_name: "test-storagemap"

  tasks:

    - name: Read CSV file
      ansible.builtin.slurp:
        src: migration_plan.csv
      register: raw_csv

    - name: Decode CSV content
      set_fact:
        csv_lines: "{{ raw_csv.content | b64decode | split('\n') | select('length') | list }}"

    - name: Convert CSV to list of dicts
      set_fact:
        csv_parsed: >-
          {{
            csv_lines[1:] | map('split', ',') |
            map('zip', csv_lines[0] | split(',')) |
            map('community.general.dict') | list
          }}

    - name: Loop through CSV rows to create migration plans
      vars:
        plan_name: "{{ item['Plan Name'] }}"
        selected_vm_name: "{{ item['RHOS Name'] }}"
        target_namespace: "{{ item['Target Namespace'] }}"
        target_storage: "{{ item['Target Storage'] }}"
        cold_or_warm: "{{ item['Cold or Warm'] }}"
        keep_ip: "{{ item['Keep IP'] | lower == 'yes' }}"
      loop: "{{ csv_parsed }}"
      loop_control:
        label: "{{ item['RHOS Name'] }}"
      tasks:

        - name: Create migration plan for {{ selected_vm_name }}
          kubernetes.core.k8s:
            state: present
            definition:
              apiVersion: forklift.konveyor.io/v1beta1
              kind: Plan
              metadata:
                name: "{{ plan_name }}"
                namespace: "{{ mtv_namespace }}"
              spec:
                provider:
                  source:
                    apiVersion: forklift.konveyor.io/v1beta1
                    kind: Provider
                    name: "{{ source_provider_name }}"
                    namespace: "{{ mtv_namespace }}"
                  destination:
                    apiVersion: forklift.konveyor.io/v1beta1
                    kind: Provider
                    name: "{{ destination_provider_name }}"
                    namespace: "{{ mtv_namespace }}"
                map:
                  network:
                    apiVersion: forklift.konveyor.io/v1beta1
                    kind: NetworkMap
                    name: "{{ network_map_name }}"
                    namespace: "{{ mtv_namespace }}"
                  storage:
                    apiVersion: forklift.konveyor.io/v1beta1
                    kind: StorageMap
                    name: "{{ storage_map_name }}"
                    namespace: "{{ mtv_namespace }}"
                namespace: "{{ mtv_namespace }}"
                targetNamespace: "{{ target_namespace }}"
                vms:
                  - name: "{{ selected_vm_name }}"
                warm: "{{ cold_or_warm | lower == 'warm' }}"
                preserveStaticIPs: "{{ keep_ip }}"
