- name: Set per-plan variables
  set_fact:
    plan_name: "{{ plan_group.key }}"
    plan_rows: "{{ plan_group.value.rows }}"
    vm_list: "{{ plan_group.value.vms }}"

- name: Create NetworkMap
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: forklift.konveyor.io/v1beta1
      kind: NetworkMap
      metadata:
        name: "{{ network_map_name }}-{{ plan_name }}"
        namespace: "{{ mtv_namespace }}"
      spec:
        provider:
          source:
            apiVersion: forklift.konveyor.io/v1beta1
            kind: Provider
            name: "{{ source_provider_name }}"
            namespace: "{{ mtv_namespace }}"
          destination:
            apiVersion: forklift.konveyor.io/v1beta1
            kind: Provider
            name: "{{ destination_provider_name }}"
            namespace: "{{ mtv_namespace }}"
        map:
          - destination:
              name: "{{ target_networkmap }}"
              namespace: "{{ target_network_namespace }}"
              type: "multus"
            source:
              id: "{{ source_networkmap_id }}"

- name: Create StorageMap
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: forklift.konveyor.io/v1beta1
      kind: StorageMap
      metadata:
        name: "{{ storage_map_name }}-{{ plan_name }}"
        namespace: "{{ mtv_namespace }}"
      spec:
        provider:
          source:
            apiVersion: forklift.konveyor.io/v1beta1
            kind: Provider
            name: "{{ source_provider_name }}"
            namespace: "{{ mtv_namespace }}"
          destination:
            apiVersion: forklift.konveyor.io/v1beta1
            kind: Provider
            name: "{{ destination_provider_name }}"
            namespace: "{{ mtv_namespace }}"
        map:
          - source:
              type: vmware
              name: "{{ source_storagemap }}"
            destination:
              storageClass: "{{ target_storagemap }}"

- name: Create Forklift Migration Plan
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: forklift.konveyor.io/v1beta1
      kind: Plan
      metadata:
        name: "{{ plan_name }}"
        namespace: "{{ mtv_namespace }}"
      spec:
        provider:
          source:
            apiVersion: forklift.konveyor.io/v1beta1
            kind: Provider
            name: "{{ source_provider_name }}"
            namespace: "{{ mtv_namespace }}"
          destination:
            apiVersion: forklift.konveyor.io/v1beta1
            kind: Provider
            name: "{{ destination_provider_name }}"
            namespace: "{{ mtv_namespace }}"
        map:
          network:
            apiVersion: forklift.konveyor.io/v1beta1
            kind: NetworkMap
            name: "{{ network_map_name }}-{{ plan_name }}"
            namespace: "{{ mtv_namespace }}"
          storage:
            apiVersion: forklift.konveyor.io/v1beta1
            kind: StorageMap
            name: "{{ storage_map_name }}-{{ plan_name }}"
            namespace: "{{ mtv_namespace }}"
        namespace: "{{ mtv_namespace }}"
        targetNamespace: "{{ mtv_namespace }}"
        vms: "{{ plan_group.value.vms }}"
        warm: true
        preserveStaticIPs: true

- name: Wait for migration plan to become Ready
  register: plan_info
  retries: 5
  delay: 5
  until: >
    plan_info.resources[0].status.conditions is defined and
    (
      plan_info.resources[0].status.conditions
      | selectattr('type', 'equalto', 'Ready')
      | selectattr('status', 'equalto', 'True')
      | list | length
    ) > 0
  failed_when: plan_info.resources | length == 0
  delegate_to: localhost
  kubernetes.core.k8s_info:
    api_version: forklift.konveyor.io/v1beta1
    kind: Plan
    name: "{{ plan_name }}"
    namespace: "{{ mtv_namespace }}"

- name: Set Plan UID
  set_fact:
    plan_uid: "{{ plan_info.resources[0].metadata.uid }}"

- name: Patch NetworkMap with ownerReferences
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: forklift.konveyor.io/v1beta1
      kind: NetworkMap
      metadata:
        name: "{{ network_map_name }}-{{ plan_name }}"
        namespace: "{{ mtv_namespace }}"
        ownerReferences:
          - apiVersion: forklift.konveyor.io/v1beta1
            kind: Plan
            name: "{{ plan_name }}"
            uid: "{{ plan_uid }}"
            controller: true
            blockOwnerDeletion: true

- name: Patch StorageMap with ownerReferences
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: forklift.konveyor.io/v1beta1
      kind: StorageMap
      metadata:
        name: "{{ storage_map_name }}-{{ plan_name }}"
        namespace: "{{ mtv_namespace }}"
        ownerReferences:
          - apiVersion: forklift.konveyor.io/v1beta1
            kind: Plan
            name: "{{ plan_name }}"
            uid: "{{ plan_uid }}"
            controller: true
            blockOwnerDeletion: true
