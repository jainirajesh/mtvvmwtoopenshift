---
- name: Cutover multiple migration plans after DiskTransfer completes
  hosts: localhost
  gather_facts: false

  vars:
    cutover_namespace: "mtv_namespace"
    plan_names_list: "{{ plan_names.split(',') | map('trim') | list }}"
    vm_name: rhel-9
    disktransfer_total_mb: 30720

  tasks:
    - name: Validate that each Plan exists
      kubernetes.core.k8s_info:
        api_version: forklift.konveyor.io/v1beta1
        kind: Plan
        name: "{{ item }}"
        namespace: "{{ cutover_namespace }}"
      loop: "{{ plan_names_list }}"
      loop_control:
        loop_var: item
      register: plan_info
      failed_when: plan_info.results | selectattr('resources', 'length', 'equalto', 0) | list | length > 0

    - name: Get Migrations for each Plan
      kubernetes.core.k8s_info:
        api_version: forklift.konveyor.io/v1beta1
        kind: Migration
        namespace: "{{ cutover_namespace }}"
        label_selectors:
          - "plan.name={{ item }}"
      loop: "{{ plan_names_list }}"
      loop_control:
        loop_var: item
      register: migrations_info

    - name: Find latest Migration for each Plan
      set_fact:
        latest_migrations: >-
          {{
            migrations_info.results
            | zip(plan_names_list)
            | map('community.general.json_query', "[?resources]|[?resources]|{plan_name: @1, migration: resources | sort_by(@, &metadata.creationTimestamp) | [-1]}") 
            | list
          }}

    - name: Fail if no Migration found for any Plan
      fail:
        msg: "No Migration found for plan {{ item.plan_name }}"
      loop: "{{ latest_migrations }}"
      loop_control:
        loop_var: item
      when: item.migration is not defined or item.migration == {}

    - name: Check DiskTransfer phase for VM {{ vm_name }} in each latest Migration
      set_fact:
        disk_transfer_status_list: >-
          {{
            latest_migrations
            | map(attribute='migration.status.vms')
            | map('selectattr', 'name', 'equalto', vm_name)
            | map('map', 'pipeline')
            | map('map', 'selectattr', 'name', 'equalto', 'DiskTransfer')
            | map('map', 'first')
            | map('map', 'phase')
            | map('first')
            | list
          }}

    - name: Fail if DiskTransfer is not Completed in any Migration
      fail:
        msg: "DiskTransfer phase is not completed for migration of plan {{ item.0.plan_name }}."
      loop: "{{ zip(latest_migrations, disk_transfer_status_list) | list }}"
      loop_control:
        loop_var: item
      when: item.1 != 'Completed'

    - name: Patch Migration to start Cutover phase
      kubernetes.core.k8s:
        api_version: forklift.konveyor.io/v1beta1
        kind: Migration
        namespace: "{{ cutover_namespace }}"
        name: "{{ item.migration.metadata.name }}"
        merge_type: strategic
        patch:
          status:
            vms:
              - name: "{{ vm_name }}"
                pipeline:
                  - name: Cutover
                    phase: Running
                    started: "{{ lookup('pipe', 'date -u +%Y-%m-%dT%H:%M:%SZ') }}"
                    progress:
                      completed: 1
                      total: "{{ disktransfer_total_mb }}"
                    tasks:
                      - name: "[vSAN-Datastore] 1b453068-0e51-116b-a94e-b8599f0581ac/rhel-9.vmdk"
                        phase: Running
                        started: "{{ lookup('pipe', 'date -u +%Y-%m-%dT%H:%M:%SZ') }}"
                        progress:
                          completed: 1
                          total: "{{ disktransfer_total_mb }}"
      loop: "{{ latest_migrations }}"
      loop_control:
        loop_var: item
