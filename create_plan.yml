---
- name: VM Migration Plan with CSV input using read_csv plugin
  hosts: localhost
  gather_facts: false

  vars_files:
    - vars.yaml  # Your variables here

  tasks:
    - name: Read CSV file into a list of dictionaries
      set_fact:
        parsed_csv: "{{ lookup('ansible.builtin.read_csv', 'migration_plan.csv', delimiter=',') }}"

    - name: Debug parsed CSV data
      debug:
        var: parsed_csv

    - name: Build Forklift VM list from "RHOS Name" column
      set_fact:
        vm_list: "{{ parsed_csv | map(attribute='RHOS Name') | map('regex_replace', '^(.+)$', '{\"name\":\"\\1\"}') | map('from_json') | list }}"

    - name: Debug VM list
      debug:
        var: vm_list

    - name: Create Forklift Migration Plan
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: forklift.konveyor.io/v1beta1
          kind: Plan
          metadata:
            name: "{{ plan_name }}"
            namespace: "{{ mtv_namespace }}"
          spec:
            provider:
              source:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ source_provider_name }}"
                namespace: "{{ mtv_namespace }}"
              destination:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ destination_provider_name }}"
                namespace: "{{ mtv_namespace }}"
            map:
              network:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: NetworkMap
                name: "{{ network_map_name }}-{{ plan_name }}"
                namespace: "{{ mtv_namespace }}"
              storage:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: StorageMap
                name: "{{ storage_map_name }}-{{ plan_name }}"
                namespace: "{{ mtv_namespace }}"
            namespace: "{{ mtv_namespace }}"
            targetNamespace: "{{ mtv_namespace }}"
            vms: "{{ vm_list }}"
            warm: true
            preserveStaticIPs: true

    - name: Get Plan UID
      kubernetes.core.k8s_info:
        api_version: forklift.konveyor.io/v1beta1
        kind: Plan
        name: "{{ plan_name }}"
        namespace: "{{ mtv_namespace }}"
      register: plan_info

    - name: Set Plan UID fact
      set_fact:
        plan_uid: "{{ plan_info.resources[0].metadata.uid }}"

    - name: Create NetworkMap with owner reference
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: forklift.konveyor.io/v1beta1
          kind: NetworkMap
          metadata:
            name: "{{ network_map_name }}-{{ plan_name }}"
            namespace: "{{ mtv_namespace }}"
            ownerReferences:
              - apiVersion: forklift.konveyor.io/v1beta1
                kind: Plan
                name: "{{ plan_name }}"
                uid: "{{ plan_uid }}"
                controller: true
                blockOwnerDeletion: true
          spec:
            provider:
              source:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ source_provider_name }}"
                namespace: "{{ mtv_namespace }}"
              destination:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ destination_provider_name }}"
                namespace: "{{ mtv_namespace }}"
            map:
              - source:
                  type: vmware
                  name: "{{ parsed_csv[0]['Source Network'] | default('') }}"
                destination:
                  type: multus
                  name: "{{ parsed_csv[0]['Target Network'] | default('') }}"
                  namespace: "{{ target_network_namespace }}"

    - name: Create StorageMap with owner reference
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: forklift.konveyor.io/v1beta1
          kind: StorageMap
          metadata:
            name: "{{ storage_map_name }}-{{ plan_name }}"
            namespace: "{{ mtv_namespace }}"
            ownerReferences:
              - apiVersion: forklift.konveyor.io/v1beta1
                kind: Plan
                name: "{{ plan_name }}"
                uid: "{{ plan_uid }}"
                controller: true
                blockOwnerDeletion: true
          spec:
            provider:
              source:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ source_provider_name }}"
                namespace: "{{ mtv_namespace }}"
              destination:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ destination_provider_name }}"
                namespace: "{{ mtv_namespace }}"
            map:
              - source:
                  type: vmware
                  name: "{{ parsed_csv[0]['Source Datastore'] | default('') }}"
                destination:
                  storageClass: "{{ parsed_csv[0]['Target StorageClass'] | default('') }}"
