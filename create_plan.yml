---
- name: VM Migration Plan with multicolumn CSV input
  hosts: localhost
  gather_facts: false

  vars_files:
    - vars.yaml

  tasks:

    - name: Load raw CSV file
      ansible.builtin.slurp:
        src: migration_plan.csv
      register: raw_csv

    - name: Decode CSV lines
      ansible.builtin.set_fact:
        csv_lines: "{{ raw_csv.content | b64decode | split('\n') | reject('equalto', '') | list }}"

    - name: Extract header and VM data
      ansible.builtin.set_fact:
        csv_header: "{{ csv_lines[0].split(',') }}"
        csv_rows: "{{ csv_lines[1:] }}"

    - name: Build structured VM dict list (no community filters)
      ansible.builtin.set_fact:
        structured_vms: >-
          {{
            csv_rows
            | map('split', ',')
            | map('zip', [csv_header])
            | map('items2dict')
            | list
          }}

    - name: Debug VM entries
      ansible.builtin.debug:
        var: structured_vms

    - name: Build Forklift VM list (only names)
      ansible.builtin.set_fact:
        vm_list: >-
          {{
            structured_vms
            | map(attribute='RHOS Name')
            | map('regex_replace', '^(.*)$', '{"name": "\\1"}')
            | map('from_json')
            | list
          }}

    - name: Create Forklift Migration Plan
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: forklift.konveyor.io/v1beta1
          kind: Plan
          metadata:
            name: "{{ plan_name }}"
            namespace: "{{ mtv_namespace }}"
          spec:
            provider:
              source:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ source_provider_name }}"
                namespace: "{{ mtv_namespace }}"
              destination:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ destination_provider_name }}"
                namespace: "{{ mtv_namespace }}"
            map:
              network:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: NetworkMap
                name: "{{ network_map_name }}-{{ plan_name }}"
                namespace: "{{ mtv_namespace }}"
              storage:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: StorageMap
                name: "{{ storage_map_name }}-{{ plan_name }}"
                namespace: "{{ mtv_namespace }}"
            namespace: "{{ mtv_namespace }}"
            targetNamespace: "{{ mtv_namespace }}"
            vms: "{{ vm_list }}"
            warm: true
            preserveStaticIPs: true

    - name: Get Plan UID
      kubernetes.core.k8s_info:
        api_version: forklift.konveyor.io/v1beta1
        kind: Plan
        name: "{{ plan_name }}"
        namespace: "{{ mtv_namespace }}"
      register: plan_info

    - name: Set Plan UID
      ansible.builtin.set_fact:
        plan_uid: "{{ plan_info.resources[0].metadata.uid }}"

    - name: Create NetworkMap (shared, not per-VM)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: forklift.konveyor.io/v1beta1
          kind: NetworkMap
          metadata:
            name: "{{ network_map_name }}-{{ plan_name }}"
            namespace: "{{ mtv_namespace }}"
            ownerReferences:
              - apiVersion: forklift.konveyor.io/v1beta1
                kind: Plan
                name: "{{ plan_name }}"
                uid: "{{ plan_uid }}"
                controller: true
                blockOwnerDeletion: true
          spec:
            provider:
              source:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ source_provider_name }}"
                namespace: "{{ mtv_namespace }}"
              destination:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ destination_provider_name }}"
                namespace: "{{ mtv_namespace }}"
            map:
              - source:
                  type: vmware
                  name: "{{ structured_vms[0]['Source Network'] }}"
                destination:
                  type: multus
                  name: "{{ structured_vms[0]['Target Network'] }}"
                  namespace: "{{ target_network_namespace }}"

    - name: Create StorageMap (shared, not per-VM)
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: forklift.konveyor.io/v1beta1
          kind: StorageMap
          metadata:
            name: "{{ storage_map_name }}-{{ plan_name }}"
            namespace: "{{ mtv_namespace }}"
            ownerReferences:
              - apiVersion: forklift.konveyor.io/v1beta1
                kind: Plan
                name: "{{ plan_name }}"
                uid: "{{ plan_uid }}"
                controller: true
                blockOwnerDeletion: true
          spec:
            provider:
              source:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ source_provider_name }}"
                namespace: "{{ mtv_namespace }}"
              destination:
                apiVersion: forklift.konveyor.io/v1beta1
                kind: Provider
                name: "{{ destination_provider_name }}"
                namespace: "{{ mtv_namespace }}"
            map:
              - source:
                  type: vmware
                  name: "{{ structured_vms[0]['Source Datastore'] }}"
                destination:
                  storageClass: "{{ structured_vms[0]['Target StorageClass'] }}"
